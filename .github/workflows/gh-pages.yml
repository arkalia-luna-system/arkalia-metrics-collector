# Workflow GitHub Pages pour Arkalia Metrics Collector
# Déploie automatiquement la documentation sur GitHub Pages

name: Deploy Documentation

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # ========================================
  # BUILD DE LA DOCUMENTATION
  # ========================================
  build:
    name: "Build Documentation"
    runs-on: ubuntu-latest
    
    steps:
      - name: "Checkout Code"
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: "Setup Python"
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: "Install Dependencies"
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[docs]"

      - name: "Create Logs Directory"
        run: |
          mkdir -p logs

      - name: "Build Documentation"
        run: |
          echo "BUILD DE LA DOCUMENTATION ARKALIA METRICS COLLECTOR"
          echo "=================================================="
          
          # Vérifier la configuration MkDocs
          mkdocs --version
          
          # Construire la documentation
          mkdocs build --site-dir ./site-build
          
          # Vérifier que le build a réussi
          if [ ! -f "./site-build/index.html" ]; then
            echo "❌ ERREUR: index.html non trouvé après build"
            exit 1
          fi
          
          echo "✅ Documentation construite avec succès"
          ls -la ./site-build/

      - name: "Verify Build Artifacts"
        run: |
          echo "🔍 VÉRIFICATION DES ARTIFACTS"
          echo "=============================="
          
          # Vérifier les fichiers essentiels
          required_files=("index.html" "api/" "guides/" "examples/")
          for file in "${required_files[@]}"; do
            if [ -e "./site-build/$file" ]; then
              echo "✅ $file - Présent"
            else
              echo "❌ $file - MANQUANT"
              exit 1
            fi
          done
          
          echo "✅ Tous les artifacts sont présents"

      - name: "Upload Build Artifacts"
        uses: actions/upload-pages-artifact@v4
        with:
          path: ./site-build

  # ========================================
  # DÉPLOIEMENT GITHUB PAGES
  # ========================================
  deploy:
    name: "Deploy to GitHub Pages"
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'
    
    steps:
      - name: "Deploy to GitHub Pages"
        id: deployment
        uses: actions/deploy-pages@v4
        
      - name: "Deployment Status"
        run: |
          echo "🚀 DÉPLOIEMENT GITHUB PAGES TERMINÉ"
          echo "===================================="
          echo "Status: ${{ steps.deployment.outputs.outcome }}"
          
          if [ "${{ steps.deployment.outputs.outcome }}" = "success" ]; then
            echo "✅ Documentation déployée avec succès !"
            echo "🌐 GitHub Pages sera disponible dans quelques minutes"
            echo "🔗 URL: https://${{ github.repository_owner }}.github.io/arkalia-metrics-collector/"
          else
            echo "❌ Échec du déploiement"
            echo "💡 Vérifiez que GitHub Pages est activé dans les paramètres du repository"
            echo "📍 Allez dans: Settings > Pages > Source: GitHub Actions"
            exit 1
          fi
